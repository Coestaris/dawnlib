use crate::input::{KeyCode, MouseButton};
use windows::Win32::UI::Input::KeyboardAndMouse::*;

pub(crate) fn convert_key(key: VIRTUAL_KEY) -> KeyCode {
    match key {
        VK_A => KeyCode::Latin('A'),
        VK_B => KeyCode::Latin('B'),
        VK_C => KeyCode::Latin('C'),
        VK_D => KeyCode::Latin('D'),
        VK_E => KeyCode::Latin('E'),
        VK_F => KeyCode::Latin('F'),
        VK_G => KeyCode::Latin('G'),
        VK_H => KeyCode::Latin('H'),
        VK_I => KeyCode::Latin('I'),
        VK_J => KeyCode::Latin('J'),
        VK_K => KeyCode::Latin('K'),
        VK_L => KeyCode::Latin('L'),
        VK_M => KeyCode::Latin('M'),
        VK_N => KeyCode::Latin('N'),
        VK_O => KeyCode::Latin('O'),
        VK_P => KeyCode::Latin('P'),
        VK_Q => KeyCode::Latin('Q'),
        VK_R => KeyCode::Latin('R'),
        VK_S => KeyCode::Latin('S'),
        VK_T => KeyCode::Latin('T'),
        VK_U => KeyCode::Latin('U'),
        VK_V => KeyCode::Latin('V'),
        VK_W => KeyCode::Latin('W'),
        VK_X => KeyCode::Latin('X'),
        VK_Y => KeyCode::Latin('Y'),
        VK_Z => KeyCode::Latin('Z'),

        // VK_Cyrillic => KeyCode::Cyrillic(char),
        VK_0 => KeyCode::Digit(0),
        VK_1 => KeyCode::Digit(1),
        VK_2 => KeyCode::Digit(2),
        VK_3 => KeyCode::Digit(3),
        VK_4 => KeyCode::Digit(4),
        VK_5 => KeyCode::Digit(5),
        VK_6 => KeyCode::Digit(6),
        VK_7 => KeyCode::Digit(7),
        VK_8 => KeyCode::Digit(8),
        VK_9 => KeyCode::Digit(9),

        /* Function keys */
        VK_BACK => KeyCode::BackSpace,
        VK_TAB => KeyCode::Tab,
        // VK_Linefeed => KeyCode::Linefeed,
        VK_CLEAR => KeyCode::Clear,
        VK_RETURN => KeyCode::Return,
        VK_PAUSE => KeyCode::Pause,
        VK_SCROLL => KeyCode::ScrollLock,
        VK_MODECHANGE => KeyCode::SysReq,
        VK_ESCAPE => KeyCode::Escape,
        VK_DELETE => KeyCode::Delete,
        VK_HOME => KeyCode::Home,
        VK_LEFT => KeyCode::Left,
        VK_UP => KeyCode::Up,
        VK_RIGHT => KeyCode::Right,
        VK_DOWN => KeyCode::Down,
        // VK_PRIOR => KeyCode::Prior,
        VK_PRIOR => KeyCode::PageUp,
        // VK_NEXT => KeyCode::Next,
        VK_NEXT => KeyCode::PageDown,
        VK_END => KeyCode::End,
        // VK_Begin => KeyCode::Begin,
        VK_LWIN => KeyCode::WinL,
        VK_RWIN => KeyCode::WinR,
        // VK_App => KeyCode::App,
        VK_SELECT => KeyCode::Select,
        VK_PRINT => KeyCode::Print,
        VK_EXECUTE => KeyCode::Execute,
        VK_INSERT => KeyCode::Insert,
        // VK_Undo => KeyCode::Undo,
        // VK_Redo => KeyCode::Redo,
        // VK_MENU => KeyCode::Menu,
        // VK_Find => KeyCode::Find,
        VK_CANCEL => KeyCode::Cancel,
        VK_HELP => KeyCode::Help,
        // VK_Break => KeyCode::Break,
        // VK_ModeSwitch => KeyCode::ModeSwitch,
        // VK_ScriptSwitch => KeyCode::ScriptSwitch,
        VK_NUMLOCK => KeyCode::NumLock,

        VK_F1 => KeyCode::Function(1),
        VK_F2 => KeyCode::Function(2),
        VK_F3 => KeyCode::Function(3),
        VK_F4 => KeyCode::Function(4),
        VK_F5 => KeyCode::Function(5),
        VK_F6 => KeyCode::Function(6),
        VK_F7 => KeyCode::Function(7),
        VK_F8 => KeyCode::Function(8),
        VK_F9 => KeyCode::Function(9),
        VK_F10 => KeyCode::Function(10),
        VK_F11 => KeyCode::Function(11),
        VK_F12 => KeyCode::Function(12),
        VK_F13 => KeyCode::Function(13),
        VK_F14 => KeyCode::Function(14),
        VK_F15 => KeyCode::Function(15),
        VK_F16 => KeyCode::Function(16),
        VK_F17 => KeyCode::Function(17),
        VK_F18 => KeyCode::Function(18),
        VK_F19 => KeyCode::Function(19),
        VK_F20 => KeyCode::Function(20),
        VK_F21 => KeyCode::Function(21),
        VK_F22 => KeyCode::Function(22),
        VK_F23 => KeyCode::Function(23),
        VK_F24 => KeyCode::Function(24),

        VK_SHIFT => KeyCode::ShiftL,
        VK_LSHIFT => KeyCode::ShiftL,
        VK_RSHIFT => KeyCode::ShiftR,
        VK_LCONTROL => KeyCode::ControlL,
        VK_RCONTROL => KeyCode::ControlR,
        VK_CONTROL => KeyCode::ControlL,
        VK_CAPITAL => KeyCode::CapsLock,
        // VK_ShiftLock => KeyCode::ShiftLock,
        // VK_MetaL => KeyCode::MetaL,
        // VK_MetaR => KeyCode::MetaR,
        VK_MENU => KeyCode::AltL,
        VK_LMENU => KeyCode::AltL,
        VK_RMENU => KeyCode::AltR,
        // VK_SuperL => KeyCode::SuperL,
        // VK_SuperR => KeyCode::SuperR,
        // VK_HyperL => KeyCode::HyperL,
        // VK_HyperR => KeyCode::HyperR,
        VK_SPACE => KeyCode::Space,

        /* Printable keys */
        // VK_Excla => KeyCode::Exclam,
        // VK_Quotedbl => KeyCode::Quotedbl,
        // VK_NumberSign => KeyCode::NumberSign,
        // VK_Dollar => KeyCode::Dollar,
        // VK_Percent => KeyCode::Percent,
        // VK_Ampersand => KeyCode::Ampersand,
        // VK_Apostrophe => KeyCode::Apostrophe,
        // VK_QuoteRight => KeyCode::QuoteRight,
        // VK_ParenLeft => KeyCode::ParenLeft,
        // VK_ParenRight => KeyCode::ParenRight,
        // VK_Asterisk => KeyCode::Asterisk,
        // VK_Plus => KeyCode::Plus,
        // VK_Comma => KeyCode::Comma,
        // VK_Minus => KeyCode::Minus,
        // VK_Period => KeyCode::Period,
        // VK_Slash => KeyCode::Slash,
        // VK_Colon => KeyCode::Colon,
        // VK_Semicolon => KeyCode::Semicolon,
        // VK_Less => KeyCode::Less,
        // VK_Equal => KeyCode::Equal,
        // VK_Greater => KeyCode::Greater,
        // VK_Question => KeyCode::Question,
        // VK_At => KeyCode::At,
        // VK_BracketLeft => KeyCode::BracketLeft,
        // VK_BracketRight => KeyCode::BracketRight,
        // VK_Backslash => KeyCode::Backslash,
        // VK_AsciiCircum => KeyCode::AsciiCircum,
        // VK_Underscore => KeyCode::Underscore,
        // VK_Grave => KeyCode::Grave,
        // VK_BraceLeft => KeyCode::BraceLeft,
        // VK_BraceRight => KeyCode::BraceRight,
        // VK_Bar => KeyCode::Bar,
        // VK_Tilde => KeyCode::Tilde,

        /* Keypad keys */
        // VK_KPSpace => KeyCode::KPSpace,
        // VK_KPTab => KeyCode::KPTab,
        // VK_KPEnter => KeyCode::KPEnter,
        // VK_KPHome => KeyCode::KPHome,
        // VK_KPLeft => KeyCode::KPLeft,
        // VK_KPUp => KeyCode::KPUp,
        // VK_KPRight => KeyCode::KPRight,
        // VK_KPDown => KeyCode::KPDown,
        // VK_KPPrior => KeyCode::KPPrior,
        // VK_KPPageUp => KeyCode::KPPageUp,
        // VK_KPNext => KeyCode::KPNext,
        // VK_KPPageDown => KeyCode::KPPageDown,
        // VK_KPEnd => KeyCode::KPEnd,
        // VK_KPBegin => KeyCode::KPBegin,
        // VK_KPInsert => KeyCode::KPInsert,
        // VK_KPDelete => KeyCode::KPDelete,
        // VK_KPEqual => KeyCode::KPEqual,
        // VK_KPMultiply => KeyCode::KPMultiply,
        // VK_KPAdd => KeyCode::KPAdd,
        // VK_KPSeparator => KeyCode::KPSeparator,
        // VK_KPSubtract => KeyCode::KPSubtract,
        // VK_KPDecimal => KeyCode::KPDecimal,
        // VK_KPDivide => KeyCode::KPDivide,
        VK_NUMPAD0 => KeyCode::KPDigit(0),
        VK_NUMPAD1 => KeyCode::KPDigit(1),
        VK_NUMPAD2 => KeyCode::KPDigit(2),
        VK_NUMPAD3 => KeyCode::KPDigit(3),
        VK_NUMPAD4 => KeyCode::KPDigit(4),
        VK_NUMPAD5 => KeyCode::KPDigit(5),
        VK_NUMPAD6 => KeyCode::KPDigit(6),
        VK_NUMPAD7 => KeyCode::KPDigit(7),
        VK_NUMPAD8 => KeyCode::KPDigit(8),
        VK_NUMPAD9 => KeyCode::KPDigit(9),

        _ => KeyCode::Unknown(key.0 as u32, 0),
    }
}

pub(crate) fn convert_mouse_button(button: u32) -> MouseButton {
    match button {
        0x01 => MouseButton::Left,
        0x02 => MouseButton::Right,
        0x04 => MouseButton::Middle,
        _ => MouseButton::Unknown(button),
    }
}
