// Container structure:
//   YARC - Yage Asset Resource Container (Yet Another Resource Container)
//   This is a flat .tar (or tar.gz) archive with the following structure:
//
//   .manifest.toml - file with all assets in the archive and their hashes (generated by the packager)
//   resource1      - binary data of resource 1
//   resource1.toml - metadata of resource 1 (optional. If not present, the defaults will be used)
//   ... and so on
//
// Directory structure is not preserved, so all assets are in the root of the archive.
// File extensions are not used, so all assets are stored as binary data.
// All names are normalized to lowercase, so there are no conflicts,
// whitespace is replaced with underscores, and special characters are removed.
//
// Resource.toml - metadata file for the asset. It contains of two parts:
//   - Header - contains the name, tag, type, checksum, and other metadata.
//     For available types see structure `AssetHeader`.
//   - TypeSpecificMetadata - contains type-specific metadata, such as dimensions
//     for images, duration for audio, etc. For available types see `TypeSpecificMetadata`.

pub(crate) mod preprocessors;
mod reader;
pub(crate) mod structures;
mod writer;

pub use structures::{ChecksumAlgorithm, Compression, ReadMode, WriteOptions};
pub use writer::write_from_directory;
pub use writer::WriterError;

pub use reader::read;
pub use reader::Container;
